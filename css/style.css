/* Display Flex */

/* Flex */

.flex {
    display: flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-item-1 {
    flex: 1;
}

/* Flex Item */

.item { /* Organização dos itens dentro do container */
    margin: 5px;
    background-color: salmon;
    text-align: center;
    font-size: 1.5em;
}

.container { /* Organização do container */
    max-width: 400px; /* Se tirar ele pega de ponta a ponta, se aumentar ele aumenta como porcentagem */
    margin: 0 auto;
    border: 3px solid #ccc;
}

h1 {
    text-align: center;
    margin: 20px 0 0 0;
    font-size: 1.25em;
    font-weight: normal;
}

body {
    font-family: monospace;
    color: #333;
}

/* Fim do Display Flex */

/* Flex-direction */

.row { /* Por padrão ele é row */
    flex-direction: row;
}

.row-reverse {
    flex-direction: row-reverse;
}

.column {
    flex-direction: column;
}

.column-reverse {
    flex-direction: column-reverse;
}

/* Flex Container - dois */

.container-dois {
    max-width: 400px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
}

/* Flex Item - dois */

.item-dois {
    /* O flex: 1; é necessário para que cada item se expanda ocupando o tamanho máximo do container */
    flex: 1;
    margin: 5px;
    background-color: lightgreen;
    text-align: center;
    font-size: 1.5em;
}

/* Fim do Flex-direction */

/* Flex-wrap */

.norap {
    flex-wrap: nowrap;
}

.wrap {
    flex-wrap: wrap;
}

.wrap-reverse {
    flex-wrap: wrap-reverse;
}

/*Flex Container - tres*/

.container-tres {
    max-width: 360px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
}

/*Flex Item - tres*/

.item-tres {
    /*O flex: 1; é necessário para que cada item se expanda ocupando o tamanho máximo do container*/
    flex: 1;
    margin: 5px;
    background-color: plum;
    text-align: center;
    font-size: 1.5em;
}

/* Fim do Flex-wrap */

/* Flex-flow */

.row-nowrap {
    flex-flow: row nowrap;
}

.column-nowrap {
    flex-flow: column nowrap;
}

.row-wrap {
    flex-flow: row wrap;
}

/* Flex Container - quatro */

.container-quatro {
    max-width: 360px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
}

/*Flex Item - quatro*/

.item-quatro {
/*O flex: 1; é necessário para que cada item se expanda ocupando o tamanho máximo do container.*/
flex: 1;
margin: 5px;
background-color: palevioletred;
text-align: center;
font-size: 1.5em;
}
/* Fim do Flex-flow */

/* Justify Content */

.flex-start {
    justify-content: flex-start;
}

.flex-end {
    justify-content: flex-end;
}

.center {
    justify-content: center;
}

.space-between {
    justify-content: space-between;
}

.space-around {
    justify-content: space-around;
}

/* Flex Container-cinco */

.container-cinco {
    max-width: 420px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
}

.column {
    min-height: 200px;
    flex-direction: column;
}

/* Flex Item-cinco */

.item-cinco {
    margin: 5px;
    padding: 0 10px;
    background-color: rgb(86, 223, 241);
    text-align: center;
    font-size: 1.5em;
}

/* Indica que o conteúdo deve se expandir */

.flex {
    flex: 1;
}

/* Fim do Justify Content */

/* Align Content */

.stretch {
    align-content: stretch;
}

.flex-start- {
    align-content: flex-start;
}

.flex-end- {
    align-content: flex-end;
}

.center- {
    align-content: center;
}

.space-between- {
    align-content: space-between;
}

.space-around- {
    align-content: space-around;
}
/* Flex Container - seis */

.container-seis {
    max-width: 420px;
    height: 300px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
    flex-wrap: wrap;
}

/* Flex Item - seis */

.item-seis {
    flex: 1;
    margin: 5px;
    padding: 0 10px;
    background-color: khaki;
    text-align: center;
    font-size: 1.5em;
}

/* Fim do Align Content */

/* Flex Item - Flex-grow */

/* Os itens não se expandem para ocupar o container */
.grow0 {
    flex-grow: 0;
}

/* Os itens se expandem igualmente para ocupar o container. Utilizando apenas o flex-grow, o crescimento é distribuído igualmente antes e depois do conteúdo de cada elemento. (pois por padrão o flex-basis é auto) */
.grow1 {
    flex-grow: 1;
}

/* Os itens se expandem duas vezes mais que aqueles com flex-grow: 1; */
.grow2 {
    flex-grow: 2;
}

.item-sete {
    margin: 5px;
    background-color: peachpuff;
    text-align: center;
    font-size: 1.5em;
}

/* Flex container-sete */

.container-sete {
    max-width: 400px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
}

/* Fim do Flex-grow */

/* Flex-basis */

/* FLEX BASIS AUTO */

.basis-auto {
    flex-grow: 1;
    flex-basis: auto; /* auto é o padrão do flex-basis, se eu tirar isso, não acontece nada*/
}

/* O espaço distribuído é 2 vezes maior que o flex-grow: 1; */
.basis-auto-grow-2 {
    flex-grow: 2;
    flex-basis: auto; 
}

/* É o mesmo espaço distribuído que os demais itens com flex-grow: 1; Porém esse espaço inicia após os 60px iniciais */
.basis-auto-width {
    flex-grow: 1;
    flex-basis: auto;
    width: 60px;
}

/* Com o flex-grow: 0; nada é distribuído */
.basis-auto-grow-0 {
    flex-basis: auto;
}

.container.overlay {
    margin-top: 10px;
}

.overlay .basis-auto::before, .overlay .basis-auto-grow-2::before, .overlay .basis-auto-width::before {
    content: "";
    display: block;
    width: 16px;
    height: 36px;
    background-color: rgb(243, 29, 243);
    position: absolute;
    opacity: .5;
}

.overlay .basis-auto-grow-2::before {
    border-right: 16px solid blueviolet;
}

.overlay .basis-auto-width::before {
    border-right: 30px solid;
}

/* FLEX BASIS AUTO FIM */

/* FLEX BASIS 0 */

/* Com o flex-basis 0, itens com flex-grow 1 tentam ficar com o mesmo tamanho total de width. É por issoq ue o mais comum é utilizar flex-basis 0 */
.basis-0 {
    flex-grow: 1;
    flex-basis: 0;
}

/* O tamanho total é de duas vezes dos itens com flex: 1; */
.basis-0-grow-2 {
    flex-grow: 2;
    flex-basis: 0;
}

/* A definição do width é ignorada. Porém ele ainda respeita a definição de min-width */
.basis-0-width {
    flex-grow: 1;
    flex-basis: 0;
    width: 120px;
    min-width: 80px;
}

/* Flex basis 0 com flex-grow 0, não influencia em nada no item. Assim o mesmo fica do tamanho do seu conteúdo. */
.basis-0-grow-0 {
    flex-basis: 0;
}

.overlay .basis-0::before, .overlay .basis-0-grow-2::before, .overlay .basis-0-width::before {
    content: "";
    display: block;
    width: 65px;
    height: 36px;
    background-color: rgb(0, 247, 255);
    position: absolute;
    opacity: .5;
}

.overlay .basis-0-grow-2::before {
    border-right: 65px solid blueviolet;
}

/* FLEX BASIS 0 FIM */

.basis-numero-container {
    flex-wrap: wrap;
}

.basis-110 {
    flex-basis: 110px;
}

.basis-300 {
    flex-basis: 300px;
}

.basis-110-porcento {
    flex-basis: calc (25% - 10px);
}

.basis-110-grow-1 {
    flex-grow: 1;
    flex-basis: 110px;
}

/* O Flex-basis não ultrapassa o tamanho do container. Pois por padrão o flex-shrink é 1, ou seja, permite que o item se ajuste para caber no container. */
.basis-600-grow-1 {
    flex-grow: 1;
    flex-basis: 600px;
}

/* ESTILOS GERAIS */

.item-oito {
    margin: 5px;
    background-color: cornflowerblue;
    text-align: center;
    font-size: 1.5em;
    position: relative;
}

/* Flex Container-oito */
.container-oito {
    max-width: 400px;
    margin: 0 auto;
    display: flex;
    border: 3px solid #ccc;
}

/* Flex Item */

img {
    display: block;
    max-width: 100%;
    margin: 10px auto;
}

/* Fim do Flex-basis */